[tool.poetry]
name = "ketabmind"
version = "0.1.0"
description = "KetabMind: RAG system for books"
authors = ["KetabMind Team <devnull@example.com>"]
readme = "README.md"
packages = [
    { include = "apps" },
    { include = "core" },
    { include = "ingest" },
    { include = "scripts" },
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
uvicorn = { version = "^0.30.0", extras = ["standard"] }
typer = { version = "^0.12.3", extras = ["all"] }
pydantic = "^2.7.0"
pydantic-settings = "^2.3.1"
structlog = "^24.1.0"
qdrant-client = "^1.9.0"
numpy = "^1.26.0"
orjson = "^3.10.0"
scripts = "^3.0"
pypdf = "^6.0.0"
python-multipart = "^0.0.20"
sentence-transformers = "^5.1.0"
prometheus-client = "^0.20.0"
slowapi = "^0.1.9"
starlette = "^0.37.2"
sqlalchemy = "^2.0.34"
alembic = "^1.13.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
pytest-asyncio = "^0.23.7"
httpx = "^0.27.0"
ruff = "^0.5.0"
black = "^24.4.2"
mypy = "^1.10.0"
types-requests = "^2.32.0.20240712"
reportlab = "^4.1.0"

[tool.poetry.group.gpu.dependencies]
transformers = ">=4.42"
accelerate = "*"
bitsandbytes = "*"
sentencepiece = "*"
safetensors = "*"
tokenizers = "*"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
follow_imports = "skip"

[[tool.mypy.overrides]]
module = [
  "fitz",
  "ebooklib",
  "ebooklib.*",
  "reportlab",
  "reportlab.*",
  "sentence_transformers",
  "torch",
  "transformers",
  "accelerate",
  "bitsandbytes",
  "safetensors",
  "sentencepiece",
  "tokenizers",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q"
testpaths = ["tests"]
markers = [
  "slow: long-running tests",
  "not_slow: fast tests that explicitly exclude slow ones",
  "integration: integration-level tests",
]
filterwarnings = [
    'ignore:Please use `import python_multipart` instead.:PendingDeprecationWarning:multipart',
  'ignore:.*SwigPyPacked has no __module__ attribute:DeprecationWarning',
  'ignore:.*SwigPyObject has no __module__ attribute:DeprecationWarning',
  'ignore:.*swigvarlink has no __module__ attribute:DeprecationWarning',
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
