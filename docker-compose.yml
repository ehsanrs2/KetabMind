services:
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    environment:
      - QDRANT_MODE=remote
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=books
      - EMBED_MODEL=small
      - OLLAMA_HOST=http://ollama:11434
    volumes:
      - ./data/uploads:/data/uploads
    ports:
      - "8000:8000"
    depends_on:
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - ketabmind

  ui:
    build:
      context: ./apps/ui
      dockerfile: Dockerfile
      args:
        KETABMIND_API_ORIGIN: http://api:8000
        NEXT_PUBLIC_API_URL: http://api:8000
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8000
      - KETABMIND_API_ORIGIN=http://api:8000
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - ketabmind

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test:
        - CMD-SHELL
        - "bash -c 'exec 3<>/dev/tcp/127.0.0.1/6333 && printf \"GET /healthz HTTP/1.0\\r\\nHost: localhost\\r\\n\\r\\n\" >&3 && cat <&3 | grep -q \"healthz check passed\"'"
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - ketabmind

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ./data/ollama:/root/.ollama
    networks:
      - ketabmind

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - api
      - qdrant
    networks:
      - ketabmind

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - ketabmind

networks:
  ketabmind:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  qdrant_data:
