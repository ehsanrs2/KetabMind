name: Build Docker Images

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ${{ vars.CONTAINER_REGISTRY || 'ghcr.io' }}

jobs:
  build:
    name: Build images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare image metadata
        id: meta
        env:
          REGISTRY_USER_SECRET: ${{ secrets.REGISTRY_USER }}
        run: |
          set -euo pipefail
          REGISTRY="${REGISTRY:-ghcr.io}"
          OWNER="$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')"
          REPO_NAME="$(echo "${GITHUB_REPOSITORY#*/}" | tr '[:upper:]' '[:lower:]')"
          if [ "${REGISTRY}" = "ghcr.io" ]; then
            NAMESPACE="$OWNER"
          else
            if [ -n "${REGISTRY_USER_SECRET}" ]; then
              NAMESPACE="$(echo "${REGISTRY_USER_SECRET}" | tr '[:upper:]' '[:lower:]')"
            else
              NAMESPACE="$OWNER"
            fi
          fi
          API_IMAGE="${REGISTRY}/${NAMESPACE}/${REPO_NAME}-api"
          UI_IMAGE="${REGISTRY}/${NAMESPACE}/${REPO_NAME}-ui"
          SHA_TAG=$(echo "${GITHUB_SHA}" | cut -c1-12)
          VERSION_TAG=""
          if [ "${GITHUB_REF_TYPE:-}" = "tag" ] && echo "${GITHUB_REF_NAME}" | grep -Eq '^v?[0-9]+\.[0-9]+\.[0-9]+$'; then
            VERSION_TAG="${GITHUB_REF_NAME}"
          fi
          {
            echo "api_image=${API_IMAGE}"
            echo "ui_image=${UI_IMAGE}"
            echo "sha_tag=${SHA_TAG}"
            echo "version_tag=${VERSION_TAG}"
            echo "api_tags<<'EOF'"
            echo "${API_IMAGE}:${SHA_TAG}"
            if [ -n "${VERSION_TAG}" ]; then
              echo "${API_IMAGE}:${VERSION_TAG}"
            fi
            echo "EOF"
            echo "ui_tags<<'EOF'"
            echo "${UI_IMAGE}:${SHA_TAG}"
            if [ -n "${VERSION_TAG}" ]; then
              echo "${UI_IMAGE}:${VERSION_TAG}"
            fi
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Determine push intent
        id: push
        env:
          REGISTRY_USER_SECRET: ${{ secrets.REGISTRY_USER }}
          REGISTRY_TOKEN_SECRET: ${{ secrets.REGISTRY_TOKEN }}
        run: |
          if [ -n "${REGISTRY_USER_SECRET}" ] && [ -n "${REGISTRY_TOKEN_SECRET}" ]; then
            echo "do_push=true" >> "$GITHUB_OUTPUT"
          else
            echo "do_push=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Log in to registry
        if: steps.push.outputs.do_push == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build api image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/api
          file: ./apps/api/Dockerfile
          push: ${{ steps.push.outputs.do_push == 'true' }}
          tags: ${{ steps.meta.outputs.api_tags }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build ui image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/ui
          file: ./apps/ui/Dockerfile
          push: ${{ steps.push.outputs.do_push == 'true' }}
          tags: ${{ steps.meta.outputs.ui_tags }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
